// <auto-generated />
using System;
using ExchangeDocument.DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExchangeDocument.Migrations
{
    [DbContext(typeof(ExchangeDocumentContext))]
    partial class ExchangeDocumentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("categoryName");

                    b.HasKey("CategoryId")
                        .HasName("PK__categori__23CAF1D81CED1810");

                    b.HasIndex(new[] { "CategoryName" }, "UQ__categori__37077ABD5AD55994")
                        .IsUnique();

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("documentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<string>("Author")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("author");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("Condition")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("condition");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("DocumentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("statusId");

                    b.Property<string>("Edition")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("edition");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("imageUrl");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Isbn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ISBN");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("price");

                    b.Property<int?>("PublicationYear")
                        .HasColumnType("int")
                        .HasColumnName("publicationYear");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("DocumentId")
                        .HasName("PK__document__EFAAAD85262EE6A7");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DocumentStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("document", (string)null);
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.DocumentStatus", b =>
                {
                    b.Property<int>("DocumentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("documentStatusId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentStatusId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("statusCode");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("statusName");

                    b.HasKey("DocumentStatusId")
                        .HasName("PK_DocumentStatus");

                    b.ToTable("documentStatus", (string)null);

                    b.HasData(
                        new
                        {
                            DocumentStatusId = 1,
                            Code = "InStock",
                            Name = "In Stock"
                        },
                        new
                        {
                            DocumentStatusId = 2,
                            Code = "Listed",
                            Name = "Listed"
                        },
                        new
                        {
                            DocumentStatusId = 3,
                            Code = "PendingSale",
                            Name = "Pending Sale"
                        },
                        new
                        {
                            DocumentStatusId = 4,
                            Code = "Sold",
                            Name = "Sold"
                        },
                        new
                        {
                            DocumentStatusId = 5,
                            Code = "Cancelled",
                            Name = "Cancelled"
                        });
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("orderDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("shippingAddress");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending")
                        .HasColumnName("status");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("totalAmount");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("OrderId")
                        .HasName("PK__orders__0809335D8C96FDD5");

                    b.HasIndex("UserId");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderDetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<decimal?>("Amount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(29, 2)")
                        .HasColumnName("amount")
                        .HasComputedColumnSql("([priceAtOrderTime]*[quantity])", false);

                    b.Property<int>("DocumentId")
                        .HasColumnType("int")
                        .HasColumnName("documentId");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<decimal>("PriceAtOrderTime")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("priceAtOrderTime");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("OrderDetailId")
                        .HasName("PK__orderDet__E4FEDE4AE6141E30");

                    b.HasIndex("DocumentId");

                    b.HasIndex("OrderId");

                    b.ToTable("orderDetails", (string)null);
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("paymentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<DateTime>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("paymentDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("paymentMethod");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Completed")
                        .HasColumnName("paymentStatus");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("transactionId");

                    b.HasKey("PaymentId")
                        .HasName("PK__payments__A0D9EFC6903F7ADB");

                    b.HasIndex(new[] { "OrderId" }, "UQ__payments__0809335CA88D5F23")
                        .IsUnique();

                    b.ToTable("payments", (string)null);
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reviewId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Content")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("content");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int")
                        .HasColumnName("documentId");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<DateTime>("ReviewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("reviewDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("ReviewId")
                        .HasName("PK__reviews__2ECD6E0429623377");

                    b.HasIndex("DocumentId");

                    b.HasIndex("UserId");

                    b.ToTable("reviews", (string)null);
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("roleName");

                    b.HasKey("RoleId")
                        .HasName("PK__roles__CD98462A6EE9A78E");

                    b.HasIndex(new[] { "RoleName" }, "UQ__roles__B1947861244D93DE")
                        .IsUnique();

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fullName");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2)
                        .HasColumnName("roleId");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId")
                        .HasName("PK__users__CB9A1CFFCF587D49");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__users__AB6E616450D264B5")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Userprofile", b =>
                {
                    b.Property<int>("UserprofileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userprofileId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserprofileId"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Birth")
                        .HasColumnType("datetime")
                        .HasColumnName("birth");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("UserprofileId")
                        .HasName("PK__userprof__CCABE6BFE822A043");

                    b.HasIndex(new[] { "UserId" }, "UQ__userprof__CB9A1CFE701C0233")
                        .IsUnique();

                    b.ToTable("userprofiles", (string)null);
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Document", b =>
                {
                    b.HasOne("ExchangeDocument.DataAccessLayer.Entities.Category", "Category")
                        .WithMany("Documents")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__document__catego__48CFD27E");

                    b.HasOne("ExchangeDocument.DataAccessLayer.Entities.DocumentStatus", "DocumentStatus")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentStatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Document_DocumentStatus");

                    b.HasOne("ExchangeDocument.DataAccessLayer.Entities.User", "User")
                        .WithMany("Documents")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__document__userId__47DBAE45");

                    b.Navigation("Category");

                    b.Navigation("DocumentStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Order", b =>
                {
                    b.HasOne("ExchangeDocument.DataAccessLayer.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__orders__userId__5441852A");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.OrderDetail", b =>
                {
                    b.HasOne("ExchangeDocument.DataAccessLayer.Entities.Document", "Document")
                        .WithMany("OrderDetails")
                        .HasForeignKey("DocumentId")
                        .IsRequired()
                        .HasConstraintName("FK__orderDeta__docum__59063A47");

                    b.HasOne("ExchangeDocument.DataAccessLayer.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__orderDeta__order__5812160E");

                    b.Navigation("Document");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Payment", b =>
                {
                    b.HasOne("ExchangeDocument.DataAccessLayer.Entities.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("ExchangeDocument.DataAccessLayer.Entities.Payment", "OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__payments__orderI__5EBF139D");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Review", b =>
                {
                    b.HasOne("ExchangeDocument.DataAccessLayer.Entities.Document", "Document")
                        .WithMany("Reviews")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__reviews__documen__4D94879B");

                    b.HasOne("ExchangeDocument.DataAccessLayer.Entities.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__reviews__userId__4E88ABD4");

                    b.Navigation("Document");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.User", b =>
                {
                    b.HasOne("ExchangeDocument.DataAccessLayer.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Users_Roles");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Userprofile", b =>
                {
                    b.HasOne("ExchangeDocument.DataAccessLayer.Entities.User", "User")
                        .WithOne("Userprofile")
                        .HasForeignKey("ExchangeDocument.DataAccessLayer.Entities.Userprofile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__userprofi__userI__403A8C7D");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Category", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Document", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.DocumentStatus", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ExchangeDocument.DataAccessLayer.Entities.User", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Userprofile");
                });
#pragma warning restore 612, 618
        }
    }
}
